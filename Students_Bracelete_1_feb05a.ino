#include "arduino_secrets.h"
// SimpleDHT - Version: Latest 
#include <SimpleDHT.h>


// ArduinoOTA for esp32 - Version: Latest 
#include <ArduinoOTA.h>

/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/a7c6ca0a-ac52-4c68-9d4a-7ccee2e6ccd9

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool Led;
  bool viberate;
  bool Vibrator_Button;
  CloudTime time_read;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

void setup(){
  
  
  // Initialize serial and wait for port to open:
  Serial.begin(9600);

  // Define pin 3 (viberator pin) as output
   pinMode(D0, OUTPUT);
   pinMode(D4, OUTPUT);
   pinMode(D7, OUTPUT);

  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  ArduinoIoTPreferredConnection.addCallback(NetworkConnectionEvent::CONNECTED, onNetworkConnect);
  ArduinoIoTPreferredConnection.addCallback(NetworkConnectionEvent::DISCONNECTED, onNetworkDisconnect);

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
ArduinoCloud.update();

//if(ArduinoCloud.connected()){
// time_read = ArduinoCloud.getLocalTime();
time_read = millis();

}


void onNetworkConnect() {
  
  Led = 1 ;
  onLedChange();
  
}

void onNetworkDisconnect() {
  Serial.println(">>>> DISCONNECTED from network");
  Led = 0 ;
  onLedChange();
}

/*
  Since Viberate is READ_WRITE variable, onViberateChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onViberateChange()  {
  // if driver arrives, viberator will viberates for 5 seconds then turned off.
  if ((viberate == true) || (Vibrator_Button == true)) {
    
    viberate = 0;
    
    digitalWrite(D7, HIGH);
    digitalWrite(D4, HIGH);
    delay(1000);
    digitalWrite(D7, LOW);  
    digitalWrite(D4, LOW);
    
    delay(500);
    
    digitalWrite(D7, HIGH);
    digitalWrite(D4, HIGH);
    delay(1000);
    digitalWrite(D7, LOW);  
    digitalWrite(D4, LOW);
    
    delay(500);
  
    digitalWrite(D7, HIGH);
    digitalWrite(D4, HIGH);
    delay(1000);
    digitalWrite(D7, LOW);  
    digitalWrite(D4, LOW);
    delay(1000);

  } else {
    digitalWrite(D7, LOW);
    digitalWrite(D4, LOW);
    
  }
}

/*
  Since Led is READ_WRITE variable, onLedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLedChange()  {
  // Add your code here to act upon Led change
  
   if (Led == 1) {
    
    digitalWrite(D0, HIGH);
    delay(1500);
    digitalWrite(D0, LOW);
    delay(500);
    digitalWrite(D0, HIGH);
    delay(1500);
    digitalWrite(D0, LOW);
}

else {
  
    digitalWrite(D0, LOW);
    
  }
}

/*
  Since VibratorButton is READ_WRITE variable, onVibratorButtonChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onVibratorButtonChange()  {
  // Add your code here to act upon VibratorButton change
  
}
